name: Auto Trading Loop

on:
  schedule:
    - cron: "0 1 * * *"   # UTC 01:00 -> Taipei 09:00
  workflow_dispatch:

jobs:
  run-trading:
    runs-on: ubuntu-latest
    env:
      USE_LLM: "1"
      GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
      GROQ_MODEL: "llama-3.1-70b-versatile"

      EMAIL_USER: ${{ secrets.EMAIL_USER }}
      EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
      EMAIL_TO: "Tim.oneway@gmail.com"

      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      SLACK_CHANNEL: "D09AGLZ7JMA"

      REPORT_DIR: reports
      HISTORY_FILE: strategy_history.json

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run trading pipeline
        run: python run_pipeline.py

      - name: Upload reports as artifact
        uses: actions/upload-artifact@v4
        with:
          name: reports-${{ github.run_id }}
          path: reports/

      - name: Prepare Slack message
        id: slack_msg
        run: |
          SIGNAL=$(jq -r '.signal // "N/A"' reports/daily_signal.json 2>/dev/null || echo "N/A")
          PRICE=$(jq -r '.price // "N/A"' reports/daily_signal.json 2>/dev/null || echo "N/A")
          SIZE=$(jq -r '.size_pct // "N/A"' reports/daily_signal.json 2>/dev/null || echo "N/A")
          OOS_SHARPE=$(jq -r '.metrics.sharpe_ratio // "N/A"' reports/weekly_insight.json 2>/dev/null || echo "N/A")
          OOS_MDD=$(jq -r '.metrics.max_drawdown // "N/A"' reports/weekly_insight.json 2>/dev/null || echo "N/A")
          HISTORY=$(jq -r '.[] | "\(.date): Sharpe \(.sharpe) | MDD \(.mdd)"' strategy_history.json 2>/dev/null || echo "N/A")
          MSG="*Auto Trading Loop 完成* :white_check_mark:\nRepo: ${{ github.repository }}\nRun: ${{ github.run_id }}\n\n*Signal*: ${SIGNAL}\n*Price*: ${PRICE}\n*Size*: ${SIZE}\n*OOS Sharpe*: ${OOS_SHARPE}\n*OOS Max Drawdown*: ${OOS_MDD}\n\n*策略歷史記錄*:\n${HISTORY}"
          echo "SLACK_MSG=$MSG" >> $GITHUB_ENV

      - name: Send Slack Notification
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload-file-path-parsed: true
          payload: |
            {
              "channel": "${{ env.SLACK_CHANNEL }}",
              "text": "${{ env.SLACK_MSG }}"
            }
        env:
          SLACK_BOT_TOKEN: ${{ env.SLACK_BOT_TOKEN }}

      - name: Send daily email
        if: env.EMAIL_USER != '' && env.EMAIL_PASS != ''
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ env.EMAIL_USER }}
          password: ${{ env.EMAIL_PASS }}
          subject: "每日交易模擬報告 - ${{ github.repository }} - ${{ github.run_number }}"
          to: ${{ env.EMAIL_TO }}
          from: ${{ env.EMAIL_USER }}
          body: |
            ${{ env.SLACK_MSG }}
          attachments: |
            reports/daily_signal.json
            reports/weekly_insight.json

      - name: Commit updated strategy/history
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add reports/*.json strategy_history.json || true
          git commit -m "Auto update: ${{ github.run_id }} $(date -u +"%Y-%m-%dT%H:%M:%SZ")" || echo "No changes to commit"
          git push
