name: Auto Trading Loop with LLM + Notifications

on:
  schedule:
    - cron: "0 1 * * *" # 每日台灣時間早上 9:00 (UTC 01:00)
  workflow_dispatch:

jobs:
  run-trading:
    runs-on: ubuntu-latest
    env:
      USE_LLM: "1"
      GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
      EMAIL_USER: ${{ secrets.EMAIL_USER }}
      EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      # Step 1: Groq LLM 自動生成策略
      - name: Generate strategy with Groq LLM
        if: env.USE_LLM == '1'
        run: python src/strategy_llm_groq.py

      # Step 2: 執行交易流程
      - name: Run trading pipeline
        run: python run_pipeline.py

      # Step 3: 儲存報告到 Artifact
      - name: Upload trading report
        uses: actions/upload-artifact@v4
        with:
          name: trading-report
          path: output/  # 你的報告資料夾

      # Step 4: 發送 Email
      - name: Send email with report
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USER }}
          password: ${{ secrets.EMAIL_PASS }}
          subject: "每日交易策略報告 - $(date +'%Y-%m-%d')"
          to: "Tim.oneway@gmail.com"
          from: "Auto Trading Bot"
          body: |
            您好，  
            附件為今日交易策略報告。  
            檔案已同時儲存至 GitHub Artifact 與 Repo。  
          attachments: output/report_summary.txt

      # Step 5: Slack 通知
      - name: Send Slack notification
        uses: slackapi/slack-github-action@v1.27.0
        with:
          payload: |
            {
              "channel": "${{ secrets.SLACK_CHANNEL }}",
              "text": "📈 每日交易策略已完成！報告已寄送至 Email 並儲存為 Artifact。",
              "attachments": [
                {
                  "text": "檢視 Artifact 報告",
                  "actions": [
                    {
                      "type": "button",
                      "text": "前往 GitHub Artifact",
                      "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      # Step 6: Commit 更新結果
      - name: Commit results
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add .
          git commit -m "Auto update results $(date '+%Y-%m-%d %H:%M:%S')" || echo "No changes to commit"
          git push
