name: Auto Trading Loop

on:
  schedule:
    - cron: "0 1 * * 6"   # 週六 09:00 台北時間 - 每週策略更新
    - cron: "0 1 * * 1-5" # 週一至週五 09:00 台北時間 - 模擬交易
  workflow_dispatch:

jobs:
  run-trading:
    runs-on: ubuntu-latest
    env:
      USE_LLM: "1"
      GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
      GROQ_MODEL: "llama-3.1-70b-versatile"
      EMAIL_USER: ${{ secrets.EMAIL_USER }}
      EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
      EMAIL_TO: "Tim.oneway@gmail.com"
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
      REPORT_DIR: reports
      HISTORY_FILE: strategy_history.json

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run trading pipeline
        run: python run_pipeline.py

      - name: Upload reports as artifact
        uses: actions/upload-artifact@v4
        with:
          name: reports-${{ github.run_id }}
          path: ${{ env.REPORT_DIR }}

      - name: Send Slack Notification
        uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: ${{ env.SLACK_CHANNEL }}
          slack-message: |
            *Auto Trading Loop 完成 ✅*
            *Repo:* ${{ github.repository }}
            *Run ID:* ${{ github.run_id }}
            *報告摘要:*
            • Signal: $(jq -r '.daily.signal' reports/daily_sim.json)
            • Price: $(jq -r '.daily.price' reports/daily_sim.json)
            • Size: $(jq -r '.daily.size_pct' reports/daily_sim.json)
            • Sharpe: $(jq -r '.metrics.sharpe // "N/A"' reports/backtest_report.json)
            • Max Drawdown: $(jq -r '.metrics.mdd // "N/A"' reports/backtest_report.json)
            *小時策略摘要:*
            $(cat reports/hourly_sim.json 2>/dev/null || echo "尚未生成")
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Send daily email
        if: ${{ env.EMAIL_USER != '' && env.EMAIL_PASS != '' }}
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ env.EMAIL_USER }}
          password: ${{ env.EMAIL_PASS }}
          subject: "每日交易模擬報告 - ${{ github.repository }} - ${{ github.run_number }}"
          to: ${{ env.EMAIL_TO }}
          from: ${{ env.EMAIL_USER }}
          body: "Auto Trading Loop 已完成執行，請查看附件報告以獲取詳情。"
          attachments: |
            reports/backtest_report.json
            reports/daily_sim.json
            reports/hourly_sim.json
            strategy_history.json
        continue-on-error: true

      - name: Commit results
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git pull --rebase
          git add reports/*.json strategy_history.json || true
          git commit -m "Auto update: ${{ github.run_id }} $(date -u +"%Y-%m-%dT%H:%M:%SZ")" || echo "No changes to commit"
          git push
