name: Test Data Collection Workflow

on:
workflow_dispatch:
inputs:
podcast_mode:
description: ‘播客模式 (tw/us)’
required: true
default: ‘tw’
type: choice
options:
- tw
- us
simulate_time:
description: ‘模擬時間 (HH:MM CST, 例如 06:00 或 14:00)’
required: false
default: ‘20:02’

jobs:
data-collection:
runs-on: ubuntu-latest
steps:
- name: Checkout Repository
uses: actions/checkout@v4

```
  - name: Set up Python
    uses: actions/setup-python@v4
    with:
      python-version: '3.11'  # 使用較新版本

  - name: Install Dependencies
    run: |
      pip install pandas

  - name: Create Required Directories
    run: |
      mkdir -p data logs scripts

  - name: Run Data Collector
    env:
      PODCAST_MODE: ${{ inputs.podcast_mode }}
      SIMULATE_TIME: ${{ inputs.simulate_time }}
    run: |
      echo "📥 開始執行資料收集員 - 模式: ${{ inputs.podcast_mode }}, 時間: ${{ inputs.simulate_time }}"
      
      # 檢查腳本是否存在，不存在則創建模擬腳本
      if [ ! -f "scripts/data_collector.py" ]; then
        echo "⚠️ 創建模擬腳本"
        cat > scripts/data_collector.py << 'EOF'
```

import os
import pandas as pd
from datetime import datetime

def main():
mode = os.getenv(‘PODCAST_MODE’, ‘tw’)
simulate_time = os.getenv(‘SIMULATE_TIME’, ‘20:02’)

```
print(f"數據收集開始 - 模式: {mode}, 模擬時間: {simulate_time}")

# 創建數據目錄
data_dir = "data"
os.makedirs(data_dir, exist_ok=True)

# 生成模擬數據
dates = pd.date_range('2024-01-01', periods=10, freq='D')
prices = 100 + (pd.Series(range(10)) * 0.1)
df = pd.DataFrame({
    'Date': dates, 
    'Close': prices,
    'Mode': mode,
    'SimulateTime': simulate_time
})

filename = f"{data_dir}/daily_{mode}.csv"
df.to_csv(filename, index=False)
print(f"✅ 數據已保存到: {filename}")

# 寫入日誌
log_dir = "logs"
os.makedirs(log_dir, exist_ok=True)
with open(f"{log_dir}/data_collector.log", "w", encoding='utf-8') as f:
    f.write(f"{datetime.now()}: Data collection completed for mode {mode}\n")
    f.write(f"Simulate time: {simulate_time}\n")
```

if **name** == “**main**”:
main()
EOF
fi

```
      # 執行腳本
      python scripts/data_collector.py
      
      # 檢查執行結果
      if [ $? -ne 0 ]; then
        echo "❌ 執行失敗"
        exit 1
      fi
      
      echo "✅ 執行完成，檢查檔案:"
      ls -la data/

  - name: Verify Output
    run: |
      echo "🔍 驗證輸出檔案..."
      
      # 檢查 CSV 檔案
      if [ -f "data/daily_${{ inputs.podcast_mode }}.csv" ]; then
        echo "✅ 數據文件生成成功: data/daily_${{ inputs.podcast_mode }}.csv"
        echo "📄 檔案內容預覽:"
        head -5 "data/daily_${{ inputs.podcast_mode }}.csv"
      else
        echo "❌ 數據文件未生成"
        exit 1
      fi
      
      # 檢查日誌檔案
      if [ -f "logs/data_collector.log" ]; then
        echo "✅ 日誌文件生成成功"
        echo "📝 日誌內容:"
        cat "logs/data_collector.log"
      else
        echo "⚠️ 日誌文件未生成"
      fi

  - name: Upload Artifacts
    uses: actions/upload-artifact@v3
    if: always()  # 無論成功失敗都上傳
    with:
      name: data-collection-results-${{ inputs.podcast_mode }}
      path: |
        data/
        logs/
      retention-days: 30
```