name: Daily Podcast Automation

on:
  schedule:
    - cron: '0 22 * * *' # 每天台灣時間早上 6:00 執行
  workflow_dispatch:

jobs:
  generate_podcast:
    runs-on: ubuntu-latest
    env:
      GROK_API_KEY: ${{ secrets.GROK_API_KEY }}
      ELEVENLABS_API_KEY: ${{ secrets.ELEVENLABS_API_KEY }}
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
      VOICE_ID: 'D9bZgM9Er0PhIxuW9Jqa'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm install axios dayjs

      - name: Generate Script (Grok)
        run: |
          node -e "
          const axios = require('axios');
          const fs = require('fs');

          async function main() {
            const apiKey = process.env.GROK_API_KEY;
            if (!apiKey) throw new Error('❌ 錯誤：GROK_API_KEY 未設定，請檢查 GitHub Secrets！');

            try {
              const res = await axios.post('https://api.grok.x.ai/v1/chat/completions', {
                model: 'grok-1',
                messages: [{
                  role: 'system',
                  content: '你是台灣中年大叔播報員，請生成12分鐘繁體中文播報腳本。內容須含：美股四大指數(.DJI, .IXIC, .SPX, SOX)收盤、QQQ和SPY ETF、比特幣與黃金期貨報價、Top5熱門股、資金流向、最新AI新聞、總體經濟新聞，最後以投資金句作結。語氣親切自然，語速約1.3倍，所有數據必須準確且經交叉驗證。'
                }]
              }, {
                headers: { Authorization: \`Bearer \${apiKey}\` }
              });

              if (!res.data.choices || !res.data.choices.length) {
                throw new Error('❌ 錯誤：Grok API 無返回內容，請檢查 API 狀態！');
              }

              fs.writeFileSync('script.txt', res.data.choices[0].message.content);
            } catch (err) {
              throw new Error(\`❌ Grok API 呼叫失敗：\${err.message}\`);
            }
          }

          main();
          "

      - name: Check script file
        run: |
          [ -s script.txt ] || { echo "❌ 錯誤：腳本 script.txt 未生成或內容為空"; exit 1; }

      - name: Generate Audio (ElevenLabs)
        run: |
          node -e "
          const axios = require('axios');
          const fs = require('fs');
          const dayjs = require('dayjs');

          async function main() {
            const apiKey = process.env.ELEVENLABS_API_KEY;
            if (!apiKey) throw new Error('❌ 錯誤：ELEVENLABS_API_KEY 未設定，請檢查 GitHub Secrets！');

            const text = fs.readFileSync('script.txt', 'utf8');
            const dateStr = dayjs().format('YYYYMMDD');

            try {
              const res = await axios({
                method: 'post',
                url: \`https://api.elevenlabs.io/v1/text-to-speech/\${process.env.VOICE_ID}/stream\`,
                headers: {
                  'xi-api-key': apiKey,
                  'Content-Type': 'application/json'
                },
                data: { text, voice_settings: { stability: 0.3, similarity_boost: 0.8 } },
                responseType: 'arraybuffer'
              });

              fs.mkdirSync('audio', { recursive: true });
              fs.writeFileSync(\`audio/daily_podcast_\${dateStr}.mp3\`, res.data);
            } catch (err) {
              throw new Error(\`❌ ElevenLabs API 呼叫失敗：\${err.message}\`);
            }
          }

          main();
          "

      - name: Check audio file
        run: |
          FILE="audio/daily_podcast_$(date +%Y%m%d).mp3"
          [ -f "$FILE" ] || { echo "❌ 錯誤：語音檔案未生成"; exit 1; }

      - name: Generate RSS Feed
        run: |
          node -e "
          const fs = require('fs');
          const dayjs = require('dayjs');
          const dateSlug = dayjs().format('YYYYMMDD');
          const pubDate = dayjs().format('ddd, DD MMM YYYY HH:mm:ss ZZ');
          const audioPath = \`audio/daily_podcast_\${dateSlug}.mp3\`;
          const audioSize = fs.statSync(audioPath).size;

          const rss = \`
          <rss version='2.0' xmlns:itunes='http://www.itunes.com/dtds/podcast-1.0.dtd'>
            <channel>
              <title>大叔說財經科技投資</title>
              <link>https://你的帳號.github.io/daily-podcast-stk/</link>
              <language>zh-tw</language>
              <itunes:image href='https://你的帳號.github.io/daily-podcast-stk/cover.jpg'/>
              <item>
                <title>\${dateSlug} 每日播報</title>
                <enclosure url='https://你的帳號.github.io/daily-podcast-stk/\${audioPath}' length='\${audioSize}' type='audio/mpeg'/>
                <guid>https://你的帳號.github.io/daily-podcast-stk/\${audioPath}</guid>
                <pubDate>\${pubDate}</pubDate>
                <itunes:duration>12:00</itunes:duration>
              </item>
            </channel>
          </rss>\`;

          fs.writeFileSync('feed.xml', rss.trim());
          "

      - name: Commit and Push Changes
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add audio/*.mp3 feed.xml script.txt
          git commit -m "🟢 每日Podcast自動更新：$(date +%Y%m%d)" || echo "✅ 無更新可提交"
          git push https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }}.git HEAD:main
