name: TW Podcast Pipeline
on:
  schedule:
    - cron: '10 6 * * 1-6'  # UTC 06:10 = 台灣 14:10, 週一-六 (Note: Corrected UTC time for 14:00 TST)
  workflow_dispatch:

jobs:
  produce:
    runs-on: ubuntu-latest
    env:
        # ... (Your existing secrets and environment variables)
        XAI_API_KEY: ${{ secrets.XAI_API_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
        B2_KEY_ID: ${{ secrets.B2_KEY_ID }}
        B2_APPLICATION_KEY: ${{ secrets.B2_APPLICATION_KEY }}
        B2_BUCKET_NAME: ${{ secrets.B2_BUCKET_NAME }}
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
        EMAIL: ${{ secrets.EMAIL }}
        ELEVENLABS_API_KEY: ${{ secrets.ELEVENLABS_API_KEY }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        # ⚠️ ADD THIS LINE TO AGREE TO THE COQUI TOS (FIXES EOFError)
        COQUI_TOS_AGREED: 1 
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      # 1. Install ffmpeg
      - name: Install ffmpeg
        run: sudo apt-get update && sudo apt-get install -y ffmpeg

      # 2. Install dependencies (including the base ones from requirements.txt)
      - name: Install Python dependencies
        run: pip install -r requirements.txt
      
      # 3. Explicitly install and upgrade TTS and its dependencies (FIXES ImportError)
      - name: Install and Upgrade TTS Dependencies
        run: |
          pip install TTS --upgrade
          pip install transformers --upgrade
          pip install torch torchvision torchaudio  # Ensure PyTorch is installed for TTS
      
      # 4. Run the main script
      - name: Run Podcast Generation
        run: python main.py --mode tw
      
      # 5. Commit and Push
      - name: Commit and Push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -f rss/ data/ logs/ docs/ strategies/
          # Only commit if there are changes
          git diff --staged --quiet || git commit -m "TW Podcast ${{ github.event.schedule || 'manual' }} published"
          git push

