name: Strategy-Simulation

on:
  schedule:
    - cron: '0 * * * *'  # 每小時觸發
  workflow_dispatch:
    inputs:
      mode:
        description: '運行模式 (hourly/daily/weekly/auto/manual)'
        required: true
        default: 'auto'
        type: choice
        options:
          - hourly
          - daily
          - weekly
          - auto
          - manual
      podcast_mode:
        description: '播客模式 (tw/us/auto) - 僅用於手動觸發'
        required: true
        default: 'auto'
        type: choice
        options:
          - tw
          - us
          - auto

jobs:
  run-simulation:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas yfinance backtrader requests pytz

      - name: Set environment variables
        run: |
          echo "MODE=${{ github.event.inputs.mode || 'hourly' }}" >> $GITHUB_ENV
          echo "MANUAL_TRIGGER=${{ github.event_name == 'workflow_dispatch' && github.event.inputs.mode == 'manual' && '1' || '0' }}" >> $GITHUB_ENV
          echo "USE_LLM=0" >> $GITHUB_ENV
          echo "REPORT_DIR=data" >> $GITHUB_ENV
          echo "DATA_DIR=data" >> $GITHUB_ENV
          echo "TARGET_RETURN=0.02" >> $GITHUB_ENV
        env:
          GITHUB_ENV: ${{ github.env }}

      - name: Run pipeline
        run: python scripts/run_pipeline.py
        env:
          GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
          GROQ_MODEL: llama-3.1-70b-versatile
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}

      - name: Check simulation files
        run: |
          ls -l data/
          for file in data/daily_0050.TW.csv data/hourly_0050.TW.csv data/daily_QQQ.csv data/hourly_QQQ.csv; do
            if [ -f "$file" ]; then
              echo "$file exists, last modified: $(stat -c %y "$file")"
            else
              echo "Warning: $file does not exist"
            fi
          done
          for file in data/daily_sim_*.json data/backtest_report_*.json data/strategy_history_*.json; do
            if [ -f "$file" ]; then
              echo "$file exists, last modified: $(stat -c %y "$file")"
            else
              echo "Warning: $file does not exist"
            fi
          done

      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git add data/*.json data/*.csv
          git commit -m "Update simulation files [skip ci]" || echo "No changes to commit"
          git push

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: simulation-reports-${{ github.run_id }}
          path: |
            data/*.json
            data/*.csv
          if-no-files-found: warn
          compression-level: 6
          overwrite: false
          include-hidden-files: false
