name: Podcast-Workflow

on:
  schedule:
    - cron: '0 22 * * 0-4'  # 每天 UTC 22:00 (台灣次日 06:00) 處理美股
    - cron: '0 8 * * 1-5'   # 工作日 UTC 08:00 (台灣 16:00) 處理台股
  workflow_dispatch:
    inputs:
      mode:
        description: '運行模式 (hourly/daily/weekly/auto/manual)'
        required: true
        default: 'auto'
        type: choice
        options:
          - daily
          - auto
          - manual
      podcast_mode:
        description: '播客模式 (tw/us/auto)'
        required: true
        default: 'auto'
        type: choice
        options:
          - tw
          - us
          - auto

jobs:
  generate-podcast:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas yfinance backtrader requests pytz edge-tts b2sdk feedgen mutagen

      - name: Set environment variables
        run: |
          # 根據觸發時間動態設置 PODCAST_MODE
          HOUR=$(date -u +%H)
          if [ "$HOUR" = "22" ]; then
            echo "PODCAST_MODE=us" >> $GITHUB_ENV
          elif [ "$HOUR" = "08" ]; then
            echo "PODCAST_MODE=tw" >> $GITHUB_ENV
          else
            echo "PODCAST_MODE=${{ github.event.inputs.podcast_mode || 'auto' }}" >> $GITHUB_ENV
          fi
          echo "MODE=${{ github.event.inputs.mode || 'auto' }}" >> $GITHUB_ENV
          echo "MANUAL_TRIGGER=${{ github.event_name == 'workflow_dispatch' && github.event.inputs.mode == 'manual' && '1' || '0' }}" >> $GITHUB_ENV
          echo "USE_LLM=1" >> $GITHUB_ENV
          echo "REPORT_DIR=data" >> $GITHUB_ENV
          echo "DATA_DIR=data" >> $GITHUB_ENV
          echo "TARGET_RETURN=0.02" >> $GITHUB_ENV
        env:
          GITHUB_ENV: ${{ github.env }}

      - name: Run pipeline
        run: python scripts/run_pipeline.py
        env:
          GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
          GROQ_MODEL: llama-3.1-70b-versatile
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
          EMAIL_USER: ${{ secrets.EMAIL_USER }}
          EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
          EMAIL_TO: Tim.oneway@gmail.com
          B2_KEY_ID: ${{ secrets.B2_KEY_ID }}
          B2_APPLICATION_KEY: ${{ secrets.B2_APPLICATION_KEY }}
          B2_BUCKET_NAME: ${{ secrets.B2_BUCKET_NAME }}

      - name: Check podcast files
        run: |
          date_str=$(date +%Y%m%d)
          for mode in tw us; do
            for subfile in docs/podcast/${date_str}_${mode}/script.txt docs/podcast/${date_str}_${mode}/audio.mp3 docs/podcast/${date_str}_${mode}/archive_audio_url.txt; do
              if [ -f "$subfile" ]; then
                echo "$subfile exists, last modified: $(stat -c %y "$subfile")"
              else
                echo "Warning: $subfile does not exist"
              fi
            done
          done
          for rss in docs/rss/podcast_tw.xml docs/rss/podcast_us.xml; do
            if [ -f "$rss" ]; then
              echo "$rss exists, last modified: $(stat -c %y "$rss")"
            else
              echo "Warning: $rss does not exist"
            fi
          done

      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          date_str=$(date +%Y%m%d)
          for mode in tw us; do
            if [ -f "docs/podcast/${date_str}_${mode}/script.txt" ]; then
              git add docs/podcast/${date_str}_${mode}/script.txt
            fi
            if [ -f "docs/podcast/${date_str}_${mode}/audio.mp3" ]; then
              git add docs/podcast/${date_str}_${mode}/audio.mp3
            fi
            if [ -f "docs/podcast/${date_str}_${mode}/archive_audio_url.txt" ]; then
              git add docs/podcast/${date_str}_${mode}/archive_audio_url.txt
            fi
          done
          if [ -f "docs/rss/podcast_tw.xml" ]; then
            git add docs/rss/podcast_tw.xml
          fi
          if [ -f "docs/rss/podcast_us.xml" ]; then
            git add docs/rss/podcast_us.xml
          fi
          git commit -m "Update podcast files [skip ci]" || echo "No changes to commit"
          git push

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: podcast-reports-${{ github.run_id }}
          path: |
            docs/podcast/*/*_tw/script.txt
            docs/podcast/*/*_tw/audio.mp3
            docs/podcast/*/*_tw/archive_audio_url.txt
            docs/podcast/*/*_us/script.txt
            docs/podcast/*/*_us/audio.mp3
            docs/podcast/*/*_us/archive_audio_url.txt
            docs/rss/podcast_tw.xml
            docs/rss/podcast_us.xml
          if-no-files-found: warn
          compression-level: 6
          overwrite: false
          include-hidden-files: false
