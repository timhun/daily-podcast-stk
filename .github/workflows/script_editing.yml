name: Script Editor

on:
  schedule:
    # 台灣時間 05:00 美股收盤
    - cron: '0 21 * * *'
    # 台灣時間 14:00 台股收盤
    - cron: '0 6 * * *'
  workflow_dispatch:
    inputs:
      mode:
        description: '指定模式 (us / tw)'
        required: false
        default: 'us'
      debug:
        description: '是否啟用 debug 模式'
        required: false
        default: 'true'

jobs:
  script-editor:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas feedparser requests

      - name: Ensure Folders
        run: |
          mkdir -p logs
          mkdir -p docs/podcast

      - name: Determine Mode
        id: set_mode
        run: |
          if [ "${{ github.event.inputs.mode }}" != "" ]; then
            echo "mode=${{ github.event.inputs.mode }}" >> $GITHUB_OUTPUT
          else
            HOUR=$(date -u +%H)
            if [ $HOUR -eq 21 ]; then
              echo "mode=us" >> $GITHUB_OUTPUT
            elif [ $HOUR -eq 6 ]; then
              echo "mode=tw" >> $GITHUB_OUTPUT
            else
              echo "mode=us" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Run Script Editor
        run: |
          DEBUG_ARG=""
          if [ "${{ github.event.inputs.debug }}" == "true" ]; then
            DEBUG_ARG="--debug"
          fi
          echo "📝 執行文字編輯師 for ${{ steps.set_mode.outputs.mode }} (debug=${{ github.event.inputs.debug }})"
          python scripts/script_editor.py --mode "${{ steps.set_mode.outputs.mode }}" $DEBUG_ARG
          echo "✅ 生成完成 at $(date '+%Y-%m-%d %H:%M:%S')"

      - name: Commit and Push Scripts
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git pull --rebase || echo "No remote changes"
          git add docs/podcast/*/script.txt || true
          git commit -m "🔄 Update podcast script [skip ci]" || echo "No changes to commit"
          git push